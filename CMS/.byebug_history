exit
current_user.notification_links.length
current_user.notification_links
exit
complaint[:admin_users][0]
complaint[:admin_user][0]
complaint[:action_users]
complaint[:resolving_users]
complaint.resolving_users
complaint.resolvig_users
details = "Complaint " + complaint.title + " marked as resolved by " + current_user.name
level
level     = ComplaintType.find(complaint.complaint_type_id)[:level]
complaint = Complaint.find(id)
quit
params[:id].to_i
params
q!
params[:id]
params
exit
@complaint
exit
params
exit
q!
q1
ComplaintType.find(5).action_user_types
ComplaintType.find(5).resolving_user_types
exit
ComplaintType.find(params[:complaint][:complaint_type_id]).resolving_user_types
complainttype
ComplaintType.find(params[:complaint][:complaint_type_id]).action_user_types
q!
UserType.find_by(type_name: 'superuser').id
UserType.find(type_name: 'superuser').id
UserType.where(type_name: 'superuser')[0].id
UserType.where(type_name: 'superuser')[:id]
UserType.where(type_name: 'superuser').id
UserType.where(type_name: 'superuser')
UserType
exit
params[:login_password]
params
exit
UserType.find(8).type_name.downcase
UserType.find(7).type_name.downcase
resolving_users_type
exit
a=Complaint.where('? = ANY (action_users) OR "group" = ?', *[6,"karaexitkoram"])
a.length
a=Complaint.where('? = ANY (action_users) OR "group" = ?', *[6,"karakoram"])
a=Complaint.where('? = ANY (action_users) OR "group" = ?', [6,"karakoram"])
a=Complaint.where('"group" = ?', 0)
a=Complaint.where('"group" = ?', *[0])
a=Complaint.where('? = ANY (action_users) OR "group" = ?', [6,0])
a=Complaint.where('? = ANY (action_users) OR "group" = ?', *[6,0])
a=Complaint.where('? = ANY (action_users) OR "group" = ?', *[6,0])))
Complaint.where('"group" LIKE ?',"karakoram")
Complaint.where('"group" LIKE ?
a=Complaint.where("? = ANY (action_users) OR "group" = ?", *[6,0])
a=Complaint.where("? = ANY (action_users) OR "group" = ?", *[6,0])))
a=Complaint.where("? = ANY (action_users) OR "group" = ?", *[6,0]))
a=Complaint.where("? = ANY (action_users) OR "group" = ?", *[6,0])
Complaint.where('group LIKE ?','karakoram')
Complaint.where('"title" LIKE ?','bad flush')
Complaint.where(title: 'bad flush')
Complaint.where('"group" LIKE ?','karakoram')
Complaint.where(group: 'karakoram')
Complaint.where('group LIKE ?','karakoram')
a.group == "karakoram"
a.group
a.title == "bad flush"
a.title
a.title.class
a.tile.class
a.group.class
a.class
a.type
b=Complaint.find(6)
b
Complaint.where('title LIKE ? OR title LIKE ?',*['bad flush','toilet'])
Complaint.where(title: 'bad flush')
Complaint.where(title: '2nd floor')
Complaint.where(group: 'karakoram')
Complaint.where('group = ?','karakoram')
Complaint.where('title = ?','bad flush')
Complaint.where('group LIKE ?','karakoram')
Complaint.where('group LIKE ?','bad flush')
Complaint.where('title LIKE ?','bad flush')
Complaint.where('group LIKE ? OR group LIKE ?', *group)
group = [ "karakoram%", "aravali%"]
Complaint.where('group LIKE ?','karakoram')
Complaint.where('group LIKE ?','karakoram%')
a[:group]
a.group
a=Complaint.find(5)
exit
a=Complaint.where('group LIKE ?', *['karakoram'])
a=Complaint.where("group LIKE ?", *["karakoram"])
b[:group]
a=Complaint.where("group = ?", *["karakoram"])
a=Complaint.where("group = ?", *["aravali"])
b.group
a=Complaint.where("group = ?", *['aravali'])
a=Complaint.where("? = ANY (action_users) OR group = ?", *[6,'aravali'])
a=Complaint.where("? = ANY (action_users) OR group = ?", *[6,"aravali"])
a=Complaint.where("? = ANY (action_users) OR group = ?", *[6,"institute"])
b.group
b = Complaint.find(5)
b = Complaint.find(1)
b = Complaint.find(1).group
a=Complaint.where(" group = ?", *[0])
a=Complaint.where("? = ANY (action_users) OR group = ?", *[6,0])
a=Complaint.where("? = ANY (action_users) ", *[6,0])
a.length
a
a=Complaint.where("? = ANY (action_users) ", *[6])
a=Complaint.where("? = ANY (action_users) OR group = ? ", *[6,0])
*[3,4]
a=Complaint.where("(? = ANY (action_users)) OR group = ? ", 6,0)
exit
a=Complaint.where("? = ANY (action_users)", 6).or(Complaint.where(group: 0)
a=Complaint.where(tbl[:action_u
a=Complaint.where(tbl[:action_users].include?(101))
a=Complaint.where(tbl[:action_users].include? 101)
a.length
a=Complaint.where(tbl[:action_users].include? 10)
a[2].action_users.include? 10
a=Complaint.where((tbl[:action_users].include? 10))
a=Complaint.where((tbl[:action_users].include? 6))
a=Complaint.where((tbl[:action_users].eq([6,7,4])))
a=Complaint.where((tbl[:action_users].eq([6,7,4]))
a=Complaint.where((tbl[:action_users].eq([7,6,4]))
a=Complaint.where((tbl[:action_users].eq(6))
a=Complaint.where((tbl[:action_users].eq(2))
a[2].action_users
a[1].action_users
a.length
a=Complaint.where((tbl[:action_users].include? 6))
Complaint.where((tbl[:action_users].include? 6))
tbl = Complaint.arel_table
a=Complaint.where("? = ANY (action_users)", 6).or(Complaint.where(group: 0))
a=Complaint.where("? = ANY (action_users)", 6).or(Complaint.where(group: 0)_
a=Complaint.where("? = ANY (action_users)", 6).or(Complaint.where(group: 0)
a=Complaint.where(["? = ANY (action_users) AND group = ? ", 6,0])
a=Complaint.where(["? = ANY (action_users)", 6])
a=Complaint.where(["? = ANY (action_users) OR group = ? ", 6,0])
a=Complaint.where("? = ANY (action_users) OR group = ? ", 6,0)
a=Complaint.where("(? = ANY (action_users)) OR group = ? ", 6,0)
a=Complaint.where("(?) = ANY (action_users) ", 6, group: 1)
a.length
a=Complaint.where("(?) = ANY (action_users) ", 6)
a=Complaint.where("(?) = ANY (action_users) ", 2)
a[1]
a[0]
a.length
a=Complaint.where("6 = ANY (action_users) ")
Complaint.where("6 = ANY (action_users) ")
Complaint.all.select{|comp| complaint.action_users.include? 6}
Complaint.all.select{|comp| complaint.include? 6}
Complaint.where("action_users.include? '6'")
a[0].action_users.include? 11
a[0].action_users.include? 10
a[0].action_users
a[0]
a=Complaint.where(id: 6)
Complaint.where(id: 6)
Complaint.where(id: 6).action_users
Complaint.where(id: 6)[:action_users]
Complaint.where(id: 6)
Complaint.where(id: 6).action_users
Complaint.where(id: 5).action_users
Complaint.where(id: 2)
Complaint.where(id: 2)[:action_users]
Complaint.where(id: 2).action_users
Complaint.where("action_users = [6]")
Complaint.where("action_users.include? '6'")
Complaint.where("action_users.include? 6")
Complaint.where(id: 5)
Complaint.where(id: 1)
Complaint.where(id: 2)
user_type.downcase
user_type
Complaint.action_users
Complaint
Complaint.where("(?) IN action_users",6)
Complaint.where("6 IN action_users")
Complaint.where("4 IN action_users")
Complaint.where(4 action_users:)
Complaint.where(action_users: 4)
Complaint.where(action_users: 1)
Complaint.where(action_users: )
Complaint.where(action_users: 7)
Complaint.where(action_users: [[6,7,4]])
Complaint.where(action_users: [6,7,4])
Complaint.where(action_users:.include? 4)
current_user.group
Complaint.where(group: "aravali")
Complaint.where(group: 9)
exit
UserType.find(current_user.user_type_id).type_name
UserType.find(current_user.user_type_id)
UserType.fin(current_user.user_type_id)
current_user.user_type_id
current_user
exit
action_users.each do |action_user| puts "lol" end
action_users.each do |action_user|
action_users
exit
complaint_params
params
exit
params
exit
params
exit
User.where(user_type_id: 7)
User.where(user_id_type: 6)
User.where(user_id_type :6)
User.where(group: 6)
User.where(user_id_type: 6)
User.where(group: 1 , user_id_type: 6)
User.where(group:1,user_id_type:6)
User.where(group:1,user_id_type:7)
User.where(group:1)
User.where(user_id_type: user_type , group: current_user[:group])
exit
params[:complaint]
exit
User.where(user_type_id: 7, group:1)
current_user[:group]
User.where(user_type_id: 7)
exit
User.where(user_id_type: 3)
User.where(group: 3).length
User.where(group: 3)
User.where(group: 2)
User.where(group: 0)
User.where(group: 1)
User.find(6).user_type_id
User.find(6)
User.find(8)
User.find(2)
User.find(1)
User.find_by(user_id_type: 6)
User.find_by(user_id_type: 7)
User
level
action_users_type
params[:complaint][:action_user_types]
User.where(user_id_type: 7)
User.where(user_id_type: 7).all
User.where(user_id_type: 7)
User.where(user_id_type: 6)
